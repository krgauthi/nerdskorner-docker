name: Gemini Issue Fixer

on:
  issues:
    types: [labeled]

jobs:
  fix-the-issue:
    # Only run this workflow if the label is 'gemini-fix'
    if: github.event.label.name == 'gemini-fix'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Code with Gemini API
        id: gemini
        run: |
          # Use curl to call the Gemini API directly
          # The prompt combines instructions with the issue title and body
          API_RESPONSE=$(curl \
            -H 'Content-Type: application/json' \
            -d '{
              "contents": [{
                "parts": [{
                  "text": "Based on the following GitHub issue, please generate the full, corrected content for the docker-compose.yml file. Only output the raw YAML code and nothing else.\n\nIssue Title: ${{ github.event.issue.title }}\n\nIssue Body: ${{ github.event.issue.body }}"
                }],
              }],
              "safetySettings": [
                  {
                    "category": "HARM_CATEGORY_HARASSMENT",
                    "threshold": "BLOCK_ONLY_HIGH"
                  },
                  {
                    "category": "HARM_CATEGORY_HATE_SPEECH",
                    "threshold": "BLOCK_ONLY_HIGH"
                  }
                ]
            }' \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_API_KEY }}")

          echo "--- RAW API RESPONSE ---"
          echo "$API_RESPONSE"
          echo "------------------------"

          # Extract the generated code and save it to a file
          # This part requires some scripting to parse the JSON response from the API
          GENERATED_CODE=$(echo "$API_RESPONSE" | jq -r '.candidates[0].content.parts[0].text')
          
          # Validate that we got a response
          if [ "$GENERATED_CODE" = "null" ] || [ -z "$GENERATED_CODE" ]; then
            echo "Error: Gemini API returned no content"
            exit 1
          fi
          
          # Save to the correct path
          echo "$GENERATED_CODE" > compose/docker-compose.yml
          echo "Gemini has generated the new file content."
          
          # Validate YAML syntax
          if ! python3 -c "import yaml; yaml.safe_load(open('compose/docker-compose.yml'))" 2>/dev/null; then
            echo "Error: Generated YAML is invalid"
            exit 1
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "fix: Automated fix for issue #${{ github.event.issue.number }}"
          branch: "fix/issue-${{ github.event.issue.number }}"
          title: "Automated fix for issue #${{ github.event.issue.number }}"
          body: |
            This PR was automatically generated by a Gemini-powered GitHub Action to address issue #${{ github.event.issue.number }}.

            Please review the changes before merging.
          # Link the PR back to the issue
          issue: ${{ github.event.issue.number }}